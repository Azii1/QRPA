pipeline {
 agent any
 stages {
     
  
 stage('build') {
     steps {
         sh 'docker build -t nformiblandine/qrpa .'
     }
}

stage ('sonarqube analysis'){
     environment {
  SCANNER_HOME = tool "SonarQubeScanner"
  }
    steps {
     withSonarQubeEnv(credentialsId: 'SONAR_TOKEN', installationName:'sonarcloud'){
     sh '''
        ${SCANNER_HOME}/bin/sonar-scanner \
  -Dsonar.organization=good-deal \
  -Dsonar.projectKey=good-deal_new-project \
  -Dsonar.sources=. \
  -Dsonar.host.url=https://sonarcloud.io
        '''
     } 
    } 
}

stage("Quality gate") {
            steps {
                waitForQualityGate abortPipeline: true
            }
        }

 
 stage('push') {
     steps{
     withCredentials([usernamePassword(usernameVariable: 'blan', passwordVariable: 'secret', credentialsId: 'dockerpass')]) {
    
                  sh '''  
                  docker login -u "$blan" -p "$secret"
                 
                 docker push nformiblandine/qrpa
                 '''
     

  }
     } 
 }
 
stage('deploy') {
     steps {
  //   sh   ' aws ecs update-service --cluster NforCluster --service frservice --force-new-deployment --region ca-central-1'
       sh ' echo Deployment done'
     }
 }
 
 

     
 }
}
